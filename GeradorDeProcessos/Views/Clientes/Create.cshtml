@model GeradorDeProcessos.Models.Clientes

@{
    ViewBag.Title = "Create";
}

<h3>Cadastro de cliente</h3>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
		<div class="form-group">
			@Html.LabelFor(model => model.TipoPessoa, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownListFor(model => model.TipoPessoa, ViewData["TipoPessoa"] as SelectList, htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.TipoPessoa, "", new { @class = "text-danger" })
			</div>
		</div>

        <div class="form-group">
            @Html.LabelFor(model => model.CpfCnpj, htmlAttributes: new { @class = "control-label col-md-2", @id="Registro" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CpfCnpj, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CpfCnpj, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="ClienteSexo">
            @Html.LabelFor(model => model.Sexo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Sexo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Sexo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="ClienteProfissao">
            @Html.LabelFor(model => model.Profissao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Profissao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Profissao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="ClienteDataNascimento">
            @Html.LabelFor(model => model.DataNascimento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataNascimento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="Renda">
            @Html.LabelFor(model => model.Renda, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Renda, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Renda, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="ClienteEstadoCivil">
            @Html.LabelFor(model => model.EstadoCivil, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EstadoCivil, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EstadoCivil, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="ClienteRegimeCasamento">
            @Html.LabelFor(model => model.RegimeCasamento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RegimeCasamento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RegimeCasamento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="ClienteConjuge_Cpf">
            @Html.LabelFor(model => model.Conjuge_Cpf, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Conjuge_Cpf, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Conjuge_Cpf, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="ClienteConjuge_Nome">
            @Html.LabelFor(model => model.Conjuge_Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Conjuge_Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Conjuge_Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IDUsuario, "IDUsuario", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IDUsuario", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IDUsuario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar", "Index", null, htmlAttributes: new { @class = "btn btn-default" })
</div>

@section scripts 
{
	<script>
		jQuery(function ($) {
			$("#DataNascimento").mask("99/99/9999")
			$("#CpfCnpj").mask("999.999.999-99")
			if ($("#TipoPessoa").val() === "0")
			{
				$("#Registro").text("CPF")
			} else {
				$("#Registro").text("CNPJ")
			}
		});
		$('#TipoPessoa').change(function () {
			if ($("#TipoPessoa").val() === "0") {
				$("#Registro").text("CPF")
				$("#CpfCnpj").mask("999.999.999-99")
				$("#ClienteSexo").show()
				$("#ClienteProfissao").show()
				$("#ClienteDataNascimento").show()
				$("#ClienteEstadoCivil").show()
				$("#ClienteRegimeCasamento").show()
				$("#ClienteConjuge_Cpf").show()
				$("#ClienteConjuge_Nome").show()
			} else {
				$("#CpfCnpj").mask("99.999.999/9999-99")
				$("#Registro").text("CNPJ")
				$("#ClienteSexo").hide()
				$("#ClienteProfissao").hide()
				$("#ClienteDataNascimento").hide()
				$("#ClienteEstadoCivil").hide()
				$("#ClienteRegimeCasamento").hide()
				$("#ClienteConjuge_Cpf").hide()
				$("#ClienteConjuge_Nome").hide()
			}
		});
	</script>
}
