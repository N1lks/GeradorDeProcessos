@model GeradorDeProcessos.Models.Empreendimentos

@{
    ViewBag.Title = "Create";
}

<h3>Cadastro de empreendimento</h3>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataEntrega, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataEntrega, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataEntrega, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Produto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Produto, new { htmlAttributes = new { @class = "form-control" } })*@
				@{
					List<SelectListItem> listaProdutos = new List<SelectListItem>();
					var produtos = new[]{
				 new SelectListItem{ Value="Produto1",Text="Produto 1"},
				 new SelectListItem{ Value="Produto2",Text="Produto 2"},
			 };
					listaProdutos = produtos.ToList();
				}
				@Html.DropDownListFor(model => model.Produto, listaProdutos, htmlAttributes: new { @class = "form-control", @name = "listaProdutos" })
                @Html.ValidationMessageFor(model => model.Produto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Campanha, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Campanha, new { htmlAttributes = new { @class = "form-control" } })*@
				@{
					List<SelectListItem> listaCamapanhas = new List<SelectListItem>();
					var campanhas = new[]{
				 new SelectListItem{ Value="Campanha1",Text="Campanha 1"},
				 new SelectListItem{ Value="Campanha2",Text="Campanha 2"},
			 };
					listaCamapanhas = campanhas.ToList();
				}
				@Html.DropDownListFor(model => model.Campanha, listaCamapanhas, htmlAttributes: new { @class = "form-control", @name = "listaCampanhas" })
                @Html.ValidationMessageFor(model => model.Campanha, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IDEmpresa, "IDEmpresa", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IDEmpresa", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IDEmpresa, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
	@Html.ActionLink("Voltar", "Index", null, new { @class = "btn btn-default" })
</div>

@section scripts
{
	<script>
		jQuery(function ($) {
			$("#DataEntrega").mask("99/99/9999");
		});
	</script>
}